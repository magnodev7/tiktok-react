#!/usr/bin/env python3
"""
Script de configura√ß√£o para Docker com autentica√ß√£o
"""

import os
import sys
import secrets
from pathlib import Path

def generate_jwt_secret():
    """Gera uma chave JWT segura"""
    return secrets.token_urlsafe(32)

def create_env_file():
    """Cria arquivo .env para Docker"""
    env_file = Path(".env")
    
    if env_file.exists():
        print("‚ö†Ô∏è  Arquivo .env j√° existe. Fazendo backup...")
        backup_file = Path(".env.backup")
        env_file.rename(backup_file)
        print(f"‚úÖ Backup criado: {backup_file}")
    
    # Gera chave JWT segura
    jwt_secret = generate_jwt_secret()
    
    env_content = f"""# Configura√ß√µes de Autentica√ß√£o
JWT_SECRET_KEY={jwt_secret}
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=1440

# Configura√ß√µes de Seguran√ßa
ADMIN_USERNAME=admin
ADMIN_PASSWORD=admin123

# Configura√ß√µes do Sistema (j√° existentes)
BASE_VIDEOS_DIR=./videos
BASE_POSTED_DIR=./posted
BASE_USERDATA_DIR=./user_data
BASE_STATE_DIR=./state
FRONTEND_DIR=./web
"""
    
    with open(env_file, 'w', encoding='utf-8') as f:
        f.write(env_content)
    
    print(f"‚úÖ Arquivo .env criado com chave JWT segura")
    return jwt_secret

def create_directories():
    """Cria diret√≥rios necess√°rios"""
    directories = [
        "videos",
        "posted",
        "user_data",
        "state",
        "users"
    ]
    
    for directory in directories:
        Path(directory).mkdir(parents=True, exist_ok=True)
        print(f"‚úÖ Diret√≥rio criado: {directory}")
    
    # Corrige permiss√µes dos diret√≥rios
    try:
        import os
        os.chmod("users", 0o777)
        os.chmod("state", 0o777)
        print("‚úÖ Permiss√µes dos diret√≥rios corrigidas")
    except Exception as e:
        print(f"‚ö†Ô∏è  Erro ao corrigir permiss√µes: {e}")
        print("   As permiss√µes ser√£o configuradas automaticamente no container")

def main():
    print("üê≥ Configurando TikTok Scheduler com Autentica√ß√£o para Docker")
    print("=" * 60)
    
    # Verifica se est√° no diret√≥rio correto
    if not Path("docker-compose.yml").exists():
        print("‚ùå Execute este script no diret√≥rio raiz do projeto")
        sys.exit(1)
    
    # Cria diret√≥rios
    print("\nüìÅ Criando diret√≥rios...")
    create_directories()
    
    # Cria arquivo .env
    print("\nüîê Configurando autentica√ß√£o...")
    jwt_secret = create_env_file()
    
    # Instru√ß√µes
    print("\nüöÄ Pr√≥ximos passos:")
    print("1. Execute: docker compose down --volumes")
    print("2. Execute: docker compose up --build")
    print("3. Acesse: http://localhost:8082/login")
    print("4. Fa√ßa login com: admin / admin123")
    
    print("\nüîí Configura√ß√µes de seguran√ßa:")
    print(f"- Chave JWT gerada: {jwt_secret[:20]}...")
    print("- Usu√°rio admin: admin")
    print("- Senha admin: admin123 (ALTERE EM PRODU√á√ÉO!)")
    
    print("\n‚ö†Ô∏è  IMPORTANTE para produ√ß√£o:")
    print("- Altere a senha do admin ap√≥s o primeiro login")
    print("- Use HTTPS em produ√ß√£o")
    print("- Configure firewall adequadamente")
    print("- Fa√ßa backup do diret√≥rio ./users/")
    
    print("\n‚ú® Sistema configurado para Docker com sucesso!")

if __name__ == "__main__":
    main()
